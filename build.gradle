group 'com.chess.network'
version '1.08-SNAPSHOT'

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        jcenter()
    }
    dependencies {
        classpath 'de.richsource.gradle.plugins:gwt-gradle-plugin:0.6'
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.5.RELEASE")
    }

}
apply plugin: 'java'
apply plugin: 'spring-boot'

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    maven { url "https://oss.sonatype.org/content/repositories/releases/" }

    maven { url "https://jitpack.io" }


}
dependencies {
    compile "com.esotericsoftware:kryonet:2.+"
    compile "com.github.wrathofrathma:kryo-serialisers:1.02"
    compile("org.springframework.boot:spring-boot-starter-data-mongodb")
}

sourceSets.main.java.srcDirs = ["src/main/java/"]

task dist(type: Jar) {
    from files(sourceSets.main.output.classesDir)
    from files(sourceSets.main.output.resourcesDir)
    from {configurations.compile.collect {zipTree(it)}}
    manifest {
        attributes(
            'Class-Path': configurations.compile.collect {it.getName() }.join(' '), 'Main-Class': 'com.chess.network.Main'
        )
    }
}


allprojects {
    apply plugin: "idea"
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://oss.sonatype.org/content/repositories/releases/" }
    }

}
sourceCompatibility = 1.5
